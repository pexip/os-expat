From: Sebastian Pipping <sebastian@pipping.org>
Date: Tue, 1 Mar 2022 23:04:52 +0100
Subject: lib|doc: Add a note on namespace URI validation
Origin: https://github.com/libexpat/libexpat/commit/c57bea96b73eee1c6d5e288f0f57efbf5238e49a

[Salvatore Bonaccorso: Backport to 2.2.10 for context changes]
---
 expat/doc/reference.html | 8 ++++++++
 expat/lib/expat.h        | 6 ++++++
 2 files changed, 14 insertions(+)

--- a/expat/doc/reference.html
+++ b/expat/doc/reference.html
@@ -936,6 +936,14 @@ the local part will be concatenated with
 to support RDF processors. It is a programming error to use the null separator
 with <a href= "#XML_SetReturnNSTriplet">namespace triplets</a>.</div>
 
+<p><strong>Note:</strong>
+Expat does not validate namespace URIs (beyond encoding)
+against RFC 3986 today (and is not required to do so with regard to
+the XML 1.0 namespaces specification) but it may start doing that
+in future releases.  Before that, an application using Expat must
+be ready to receive namespace URIs containing non-URI characters.
+</p>
+
 <pre class="fcndec" id="XML_ParserCreate_MM">
 XML_Parser XMLCALL
 XML_ParserCreate_MM(const XML_Char *encoding,
--- a/expat/lib/expat.h
+++ b/expat/lib/expat.h
@@ -231,6 +231,12 @@ XML_ParserCreate(const XML_Char *encodin
    1, 2 or 3 original parts on application level in the element handler
    may end up vulnerable, so these are advised against;  sane choices for
    a namespace separator are e.g. '\n' (line feed) and '|' (pipe).
+
+   Note that Expat does not validate namespace URIs (beyond encoding)
+   against RFC 3986 today (and is not required to do so with regard to
+   the XML 1.0 namespaces specification) but it may start doing that
+   in future releases.  Before that, an application using Expat must
+   be ready to receive namespace URIs containing non-URI characters.
 */
 XMLPARSEAPI(XML_Parser)
 XML_ParserCreateNS(const XML_Char *encoding, XML_Char namespaceSeparator);
